package flag // import "github.com/tappoy/flag"

This package is simpler version of flag package in Go standard library.

The differences from the standard package are as follows:
  - Does not require an output stream of error messages. Immediately returns the
    offending argument in the event of an error.
  - Parses arguments with a leading hyphen. If the argument requires a value,
    parse the next argument. Process any arguments given. Does not stop
    processing if there are arguments that are not covered. So, os.Args can be
    given as it is, starting from index 0.
  - Args() can be used to retrieve arguments not subject to parsing.
  - Double hyphens `--like_this` are not supported.
  - The value specification by the equal sign `-like=this` is not supported.
  - Supported types are string, int, and bool.
  - The bool flag does not support value. If the flag is given, it is set to
    true. If not, it is set to false.

VARIABLES

var (
	// ErrUnknownFlag is returned when an unknown flag is given.
	ErrUnknownFlag = errors.New("Unknown flag")

	// ErrDoubleHyphen is returned when a double hyphen is given.
	ErrDoubleHyphen = errors.New("Double hyphen")

	// ErrMissingValue is returned when a value is missing.
	ErrMissingValue = errors.New("Missing value")

	// ErrInvalidValue is returned when an invalid value is given.
	ErrInvalidValue = errors.New("Invalid value")

	// ErrAlreadyParsed is returned when Parse is called twice.
	ErrAlreadyParsed = errors.New("Already parsed")
)

TYPES

type FlagSet struct {
	// Has unexported fields.
}

func NewFlagSet(args []string) *FlagSet
    NewFlagSet creates a new FlagSet.

func (f *FlagSet) Args() []string
    Args returns the remaining arguments that are not subject to parsing.

func (f *FlagSet) BoolVar(dest *bool, name string)
    BoolVar defines a bool flag with specified name.

func (f *FlagSet) IntVar(dest *int, name string, defaultValue int)
    IntVar defines a int flag with specified name and default value.

func (f *FlagSet) Parse() error
    Parse parses the arguments. If an error occurs, it returns a ParseError.

    ParseError.Err is one of the following:
      - ErrUnknownFlag
      - ErrDoubleHyphen
      - ErrMissingValue
      - ErrInvalidValue
      - ErrAlreadyParsed

func (f *FlagSet) StringVar(dest *string, name string, defaultValue string)
    StringVar defines a string flag with specified name and default value.

type ParseError struct {
	// The flag that caused the error.
	Arg string

	// The error that occurred. It specifies in this package.
	Err error

	// The value that caused the error.
	Value string
}

func (e ParseError) Error() string
    Error returns a string representation of the error.

